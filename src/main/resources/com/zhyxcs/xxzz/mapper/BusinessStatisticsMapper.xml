<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhyxcs.xxzz.mapper.BusinessStatisticsMapper">
    <resultMap id="BaseResultMap" type="com.zhyxcs.xxzz.domain.BusinessStatistics">
        <constructor>
            <idArg column="sID" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="sTransactionNum" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sPBCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sBankAreaCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sBankCityCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sBankKind" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sBankTypeCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sBusinessCategory" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sAccountType" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sPass" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sOverTime" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sErrorType" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sHappenTimes" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbusinessstatistics
    where sID = #{sid,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.zhyxcs.xxzz.domain.BusinessStatistics">
        <selectKey resultType="java.lang.Long" keyProperty="sid" keyColumn="sID" order="BEFORE">
            select getSequenceNextVal('statistics_seq');
        </selectKey>
        insert into tbusinessstatistics (sID, sTransactionNum, sPBCode,
        sBankAreaCode, sBankCityCode, sBankKind,
        sBankTypeCode, sBusinessCategory, sAccountType,
        sPass, sOverTime, sErrorType,
        sHappenTimes)
        values (#{sid,jdbcType=BIGINT}, #{stransactionnum,jdbcType=VARCHAR}, #{spbcode,jdbcType=VARCHAR},
        #{sbankareacode,jdbcType=VARCHAR}, #{sbankcitycode,jdbcType=VARCHAR}, #{sbankkind,jdbcType=VARCHAR},
        #{sbanktypecode,jdbcType=VARCHAR}, #{sbusinesscategory,jdbcType=VARCHAR}, #{saccounttype,jdbcType=VARCHAR},
        #{spass,jdbcType=VARCHAR}, #{sovertime,jdbcType=VARCHAR}, #{serrortype,jdbcType=VARCHAR},
        #{shappentimes,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.zhyxcs.xxzz.domain.BusinessStatistics">
    update tbusinessstatistics
    set sTransactionNum = #{stransactionnum,jdbcType=VARCHAR},
      sPBCode = #{spbcode,jdbcType=VARCHAR},
      sBankAreaCode = #{sbankareacode,jdbcType=VARCHAR},
      sBankCityCode = #{sbankcitycode,jdbcType=VARCHAR},
      sBankKind = #{sbankkind,jdbcType=VARCHAR},
      sBankTypeCode = #{sbanktypecode,jdbcType=VARCHAR},
      sBusinessCategory = #{sbusinesscategory,jdbcType=VARCHAR},
      sAccountType = #{saccounttype,jdbcType=VARCHAR},
      sPass = #{spass,jdbcType=VARCHAR},
      sOverTime = #{sovertime,jdbcType=VARCHAR},
      sErrorType = #{serrortype,jdbcType=VARCHAR},
      sHappenTimes = #{shappentimes,jdbcType=TIMESTAMP}
    where sID = #{sid,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select sID, sTransactionNum, sPBCode, sBankAreaCode, sBankCityCode, sBankKind, sBankTypeCode, 
    sBusinessCategory, sAccountType, sPass, sOverTime, sErrorType, sHappenTimes
    from tbusinessstatistics
    where sID = #{sid,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select sID, sTransactionNum, sPBCode, sBankAreaCode, sBankCityCode, sBankKind, sBankTypeCode, 
    sBusinessCategory, sAccountType, sPass, sOverTime, sErrorType, sHappenTimes
    from tbusinessstatistics
  </select>

    <select id="getCountByTransactionNum" resultType="int">
        select count(*) from tbusinessstatistics where sTransactionNum = #{transactionNum}
    </select>

    <select id="measureBusiness" resultType="int">
        select count(*) from tbusinessstatistics
        <trim prefix="where" prefixOverrides="and">
            <if test="pbcCode != null">
                sPBCode = #{pbcCode,jdbcType=VARCHAR}
            </if>
            <if test="areaCode != null">
                and sBankAreaCode = #{areaCode,jdbcType=VARCHAR}
            </if>
            <if test="cityCode != null">
                and sBankCityCode = #{cityCode,jdbcType=VARCHAR}
            </if>
            <if test="bankKind != null">
                and sBankKind = #{bankKind,jdbcType=VARCHAR}
            </if>
            <if test="bankType != null">
                and sBankTypeCode = #{bankType,jdbcType=VARCHAR}
            </if>
            <if test="bankCode != null">
                and SUBSTRING(sTransactionNum,1,12) = #{bankCode,jdbcType=VARCHAR}
            </if>
            <if test="startTime != null">
                and date(sHappenTimes) <![CDATA[ >= ]]> #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime != null">
                and date(sHappenTimes) <![CDATA[ <= ]]> #{endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="businessCategory != null">
                and sBusinessCategory = #{businessCategory,jdbcType=VARCHAR}
            </if>
            <if test="accountType != null">
                and sAccountType = #{accountType,jdbcType=VARCHAR}
            </if>
            <if test="passed != null">
                and sPass = #{passed,jdbcType=VARCHAR}
            </if>
            <if test="pbcCodeList != null and pbcCodeList.size > 0">
                and sPBCode IN
                <foreach collection="pbcCodeList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="commerceCodeList != null and commerceCodeList.size > 0">
                and SUBSTRING(sTransactionNum,1,12) IN
                <foreach collection="commerceCodeList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>

    <select id="mistakeBusiness" resultType="int">
        select count(*) from tbusinessstatistics
        <trim prefix="where" prefixOverrides="and">
            <if test="pbcCode != null">
                sPBCode = #{pbcCode,jdbcType=VARCHAR}
            </if>
            <if test="areaCode != null">
                and sBankAreaCode = #{areaCode,jdbcType=VARCHAR}
            </if>
            <if test="cityCode != null">
                and sBankCityCode = #{cityCode,jdbcType=VARCHAR}
            </if>
            <if test="bankKind != null">
                and sBankKind = #{bankKind,jdbcType=VARCHAR}
            </if>
            <if test="bankType != null">
                and sBankTypeCode = #{bankType,jdbcType=VARCHAR}
            </if>
            <if test="bankCode != null">
                and SUBSTRING(sTransactionNum,1,12) = #{bankCode,jdbcType=VARCHAR}
            </if>
            <if test="startTime != null">
                and date(sHappenTimes) <![CDATA[ >= ]]> #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime != null">
                and date(sHappenTimes) <![CDATA[ <= ]]> #{endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="businessCategory != null">
                and sBusinessCategory = #{businessCategory,jdbcType=VARCHAR}
            </if>
            <if test="grounds != null">
                and sErrorType = #{grounds,jdbcType=VARCHAR}
            </if>
            <if test="pbcCodeList != null and pbcCodeList.size > 0">
                and sPBCode IN
                <foreach collection="pbcCodeList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="commerceCodeList != null and commerceCodeList.size > 0">
                and SUBSTRING(sTransactionNum,1,12) IN
                <foreach collection="commerceCodeList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>
</mapper>